{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2023-03-10T10:18:33.922Z",
    "end": "2023-03-10T10:27:41.059Z",
    "duration": 547137,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4ece29f7-a2f5-4c6c-aa34-03e52089f66c",
      "title": "",
      "fullFile": "cypress\\e2e\\streamstudio\\webcastcreation.cy.js",
      "file": "cypress\\e2e\\streamstudio\\webcastcreation.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a5fc1609-950d-4862-9216-793e1cd3156c",
          "title": "StreamStudio WebCast Creation Suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "creating webcast with ecdn enabled",
              "fullTitle": "StreamStudio WebCast Creation Suite creating webcast with ecdn enabled",
              "timedOut": null,
              "duration": 149626,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#email-input').type(_testData.userData.email);\ncy.get('#password-input').type(_testData.userData.password);\ncy.get('.login-submit').click(); //veryfing name\ncy.get('.crew-text').should('contain', 'STREAMSTUDIO');\ncy.log('login successful'); //clicking to organization\ncy.get(':nth-child(4) > span').click(); //clicking a qa test\ncy.get(':nth-child(8) > :nth-child(5) > a').click();\ncy.get(':nth-child(2) > :nth-child(4) > .button-sumbit-container > .dropleft > .dropdown-toggle').click(); //clicking automated client\ncy.get(':nth-child(2) > :nth-child(4) > .button-sumbit-container > .dropleft > .dropdown-menu > :nth-child(1) > span').click();\ncy.wait(100); //clicking webcast creation button\ncy.get(\"[class='create-webcast cursor-pointer col-3']\").click();\ncy.get(':nth-child(7) > .form-control').type(_testData.userData.webcastName + ' self stream' + ' with ecdn');\ncy.get(\"[type='submit']\").click();\ncy.get('.css-fsmweu-control > .css-1hwfws3').click();\ncy.get('#react-select-13-option-4').click();\ncy.get('[style=\"outline: none; border: none; background: rgb(98, 190, 178); color: rgb(255, 255, 255); width: 125px; height: 35px; margin-left: 20px;\"]').click();\ncy.get('[style=\"display: inline-block; font-size: 16px; margin-right: 20px;\"] > .containerRadio > .checkmarkR').click();\ncy.get('[style=\"margin-bottom: 10px;\"] > .css-2b097c-container > .css-1j8vvet-control > .css-1hwfws3 > .css-r6er38-placeholder').click();\ncy.get('#react-select-15-option-0').click();\ncy.get('[style=\"margin-bottom: 20px;\"] > .css-2b097c-container > .css-1j8vvet-control > .css-1hwfws3').click();\ncy.get('#react-select-16-option-0').click();\ncy.get('.border-0').click();\ncy.get('.cursor-pointer > button').click(); //checking the webcast information\ncy.wait(300);\ncy.get(':nth-child(7) > .MuiButtonBase-root > .MuiListItemText-root').click();\ncy.get('.MuiList-root > :nth-child(1) > .MuiListItemText-root').click(); // cy.get('[class=\"col col-4\"]').find()\ncy.get('[class=\"form-control\"]').invoke('val').then(value => {\n  // value will contain the value of the input field\n  // You can use the value in your tests or assertions\n  expect(value).to.match(/kollective/);\n  cy.log(value);\n});",
              "err": {},
              "uuid": "dd348cb1-f9e8-4995-8bba-3ec69366342a",
              "parentUUID": "a5fc1609-950d-4862-9216-793e1cd3156c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "creating webcast with no ecdn enable",
              "fullTitle": "StreamStudio WebCast Creation Suite creating webcast with no ecdn enable",
              "timedOut": null,
              "duration": 132207,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#email-input').type(_testData.userData.email);\ncy.get('#password-input').type(_testData.userData.password);\ncy.get('.login-submit').click(); //veryfing name\ncy.get('.crew-text').should('contain', 'STREAMSTUDIO');\ncy.log('login successful'); //clicking to organization\ncy.get(':nth-child(4) > span').click(); //clicking a qa test\ncy.get(':nth-child(8) > :nth-child(5) > a').click();\ncy.get(':nth-child(2) > :nth-child(4) > .button-sumbit-container > .dropleft > .dropdown-toggle').click(); //clicking automated client\ncy.get(':nth-child(2) > :nth-child(4) > .button-sumbit-container > .dropleft > .dropdown-menu > :nth-child(1) > span').click();\ncy.wait(100); //clicking webcast creation button\ncy.get(\"[class='create-webcast cursor-pointer col-3']\").click();\ncy.get(':nth-child(7) > .form-control').type(_testData.userData.webcastName + ' self stream' + ' without ecdn');\ncy.get(\"[type='submit']\").click(); //select start time\ncy.get('.css-fsmweu-control > .css-1hwfws3').click();\ncy.get('#react-select-13-option-4').click();\ncy.get('[style=\"outline: none; border: none; background: rgb(98, 190, 178); color: rgb(255, 255, 255); width: 125px; height: 35px; margin-left: 20px;\"]').click();\ncy.get('[style=\"display: inline-block; font-size: 16px; margin-right: 20px;\"] > .containerRadio > .checkmarkR').click();\ncy.get('[style=\"margin-bottom: 10px;\"] > .css-2b097c-container > .css-1j8vvet-control > .css-1hwfws3 > .css-r6er38-placeholder').click();\ncy.get('#react-select-15-option-0').click();\ncy.get('.form-group > .containerCheck > .checkmark').click();\ncy.get('.border-0').click();\ncy.get('.cursor-pointer > button').click(); //checking the webcast information\ncy.wait(300);\ncy.get(':nth-child(7) > .MuiButtonBase-root > .MuiListItemText-root').click();\ncy.get('.MuiList-root > :nth-child(1) > .MuiListItemText-root').click(); // cy.get('[class=\"col col-4\"]').find()\ncy.get('[class=\"form-control\"]').invoke('val').then(value => {\n  // value will contain the value of the input field\n  // You can use the value in your tests or assertions\n  expect(value).to.match(/wowza/);\n  cy.log(value);\n});",
              "err": {},
              "uuid": "2d294d6a-fd50-412f-8cb8-60ff8ca12ed0",
              "parentUUID": "a5fc1609-950d-4862-9216-793e1cd3156c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "creating zoom webcast copying template, changing date and with ecdn enabled",
              "fullTitle": "StreamStudio WebCast Creation Suite creating zoom webcast copying template, changing date and with ecdn enabled",
              "timedOut": null,
              "duration": 129073,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#email-input').type(_testData.userData.email);\ncy.get('#password-input').type(_testData.userData.password);\ncy.get('.login-submit').click(); //veryfing name\ncy.get('.crew-text').should('contain', 'STREAMSTUDIO');\ncy.log('login successful'); //clicking to organization\ncy.get(':nth-child(4) > span').click(); //clicking a qa test\ncy.get(':nth-child(8) > :nth-child(5) > a').click();\ncy.get(':nth-child(2) > :nth-child(4) > .button-sumbit-container > .dropleft > .dropdown-toggle').click(); //clicking automated client\ncy.get(':nth-child(2) > :nth-child(4) > .button-sumbit-container > .dropleft > .dropdown-menu > :nth-child(1) > span').click();\ncy.wait(100); //clicking webcast creation button\ncy.get(\"[class='create-webcast cursor-pointer col-3']\").click(); //input the name of the webcast\ncy.get(':nth-child(7) > .form-control').type(_testData.userData.webcastName + ' zoom' + ' with ecdn'); //select a webcast for copying template\ncy.get(':nth-child(10) > .css-2b097c-container > .css-1wi19s-control > .css-1hwfws3').click();\ncy.get('#react-select-11-option-22').click(); //submit the button\ncy.get(\"[type='submit']\").click(); //chang the date\ncy.get('.react-date-picker-aw').click();\ncy.get('[class=\"react-datepicker__navigation react-datepicker__navigation--next\"]').click();\ncy.get(':nth-child(6) > .react-datepicker__day--030').click();\ncy.wait(50); //storing the date\n// the date will be 30\nlet selectedDate;\ncy.get('.react-datepicker__aria-live').invoke('text').then(text => {\n  selectedDate = text.trim();\n  cy.log(selectedDate);\n  expect(text).to.match(/30/);\n}); //select start time\n//the time will be 2.00\ncy.get('.css-fsmweu-control > .css-1hwfws3').click();\ncy.get('#react-select-13-option-8').click();\nlet selectedTime;\ncy.get('[class=\" css-1uccc91-singleValue\"]').invoke('text').then(text => {\n  selectedTime = text.trim();\n  cy.log(selectedTime);\n  expect(text).to.match(/2/);\n}); //change time zone\n// time zone will be -2\ncy.get('.css-1wi19s-control > .css-1hwfws3').click();\ncy.get('#react-select-14-option-6').click();\nlet selectedTimeZone;\ncy.get('[class=\" css-1uccc91-singleValue\"]').invoke('text').then(text => {\n  selectedTimeZone = text.trim();\n  cy.log(selectedTimeZone);\n  expect(text).to.match(/-02/);\n}); //click the next button\ncy.get('[style=\"outline: none; border: none; background: rgb(98, 190, 178); color: rgb(255, 255, 255); width: 125px; height: 35px; margin-left: 20px;\"]').click(); //clicking easyewbcast web conference\ncy.get('[class=\"checkmarkR\"]').eq(1).click(); //select bitrate\ncy.get('[style=\"margin-bottom: 10px;\"] > .css-2b097c-container > .css-1j8vvet-control > .css-1hwfws3 > .css-r6er38-placeholder').click();\ncy.get('#react-select-15-option-0').click(); //select ecdn vendor\ncy.get('[style=\"margin-bottom: 20px;\"] > .css-2b097c-container > .css-1j8vvet-control > .css-1hwfws3').click();\ncy.get('#react-select-16-option-0').click(); //click next\ncy.get('.border-0').click(); //click create webcast\ncy.get('.cursor-pointer > button').click(); //wait time\ncy.wait(300); //verify the information\n//verifying the name\nlet selectedName;\ncy.get('[style=\"font-size: 25px; margin-left: -60px;\"]').invoke('text').then(text => {\n  selectedName = text.trim();\n  cy.log(selectedName);\n  expect(text).to.match(/webcast/);\n}); //verifying the time\ncy.get(':nth-child(2) > :nth-child(3) > :nth-child(1) > .d-flex > [style=\"width: 55%; text-align: left;\"]').invoke('text').then(text => {\n  selectedName = text.trim();\n  cy.log(selectedName);\n  expect(text).to.match(/10/);\n}); //verifying date\ncy.get(':nth-child(2) > :nth-child(2) > :nth-child(1) > .d-flex > [style=\"width: 55%; text-align: left;\"]').invoke('text').then(text => {\n  selectedName = text.trim();\n  cy.log(selectedName);\n  expect(text).to.match(/30/);\n}); //verifying stream\ncy.get(':nth-child(7) > .MuiButtonBase-root > .MuiListItemText-root').click();\ncy.get('.MuiList-root > :nth-child(1) > .MuiListItemText-root').click(); // cy.get('[class=\"col col-4\"]').find()\ncy.get('[class=\"form-control\"]').invoke('val').then(value => {\n  // value will contain the value of the input field\n  // You can use the value in your tests or assertions\n  expect(value).to.match(/kollective/);\n  cy.log(value);\n}); //test advance option\ncy.get(':nth-child(2) > .MuiListItemText-root').click();\ncy.get('.btn-group > .btn').click();\ncy.get('.btn-group > .dropdown-menu > :nth-child(1)').click();\nlet selectInformation;\ncy.get('[class=\"zoom-show-info-item-value-text col-9\"]').invoke('text').then(text => {\n  selectInformation = text.trim();\n  cy.log(selectInformation);\n  expect(text).to.match(/Meeting/);\n});",
              "err": {},
              "uuid": "ddea3c6f-1f37-4ef7-acf2-d8e07610d123",
              "parentUUID": "a5fc1609-950d-4862-9216-793e1cd3156c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "creating zoom webcast changing template, changing date and with no ecdn enabled",
              "fullTitle": "StreamStudio WebCast Creation Suite creating zoom webcast changing template, changing date and with no ecdn enabled",
              "timedOut": null,
              "duration": 123681,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#email-input').type(_testData.userData.email);\ncy.get('#password-input').type(_testData.userData.password);\ncy.get('.login-submit').click(); //veryfing name\ncy.get('.crew-text').should('contain', 'STREAMSTUDIO');\ncy.log('login successful'); //clicking to organization\ncy.get(':nth-child(4) > span').click(); //clicking a qa test\ncy.get(':nth-child(8) > :nth-child(5) > a').click();\ncy.get(':nth-child(2) > :nth-child(4) > .button-sumbit-container > .dropleft > .dropdown-toggle').click(); //clicking automated client\ncy.get(':nth-child(2) > :nth-child(4) > .button-sumbit-container > .dropleft > .dropdown-menu > :nth-child(1) > span').click();\ncy.wait(100); //clicking webcast creation button\ncy.get(\"[class='create-webcast cursor-pointer col-3']\").click(); //input the name of the webcast\ncy.get(':nth-child(7) > .form-control').type(_testData.userData.webcastName + ' zoom' + ' with no ecdn'); //change template\ncy.get('#template').select('14997').should('have.value', '14997'); //submit the button\ncy.get(\"[type='submit']\").click(); //chang the date\ncy.get('.react-date-picker-aw').click();\ncy.get('[class=\"react-datepicker__navigation react-datepicker__navigation--next\"]').click();\ncy.get(':nth-child(6) > .react-datepicker__day--030').click();\ncy.wait(50); //storing the date\n// the date will be 30\nlet selectedDate;\ncy.get('.react-datepicker__aria-live').invoke('text').then(text => {\n  selectedDate = text.trim();\n  cy.log(selectedDate);\n  expect(text).to.match(/30/);\n}); //select start time\n//the time will be 2.00\ncy.get('.css-fsmweu-control > .css-1hwfws3').click();\ncy.get('#react-select-13-option-8').click();\nlet selectedTime;\ncy.get('[class=\" css-1uccc91-singleValue\"]').invoke('text').then(text => {\n  selectedTime = text.trim();\n  cy.log(selectedTime);\n  expect(text).to.match(/2/);\n}); //change time zone\n// time zone will be -2\ncy.get('.css-1wi19s-control > .css-1hwfws3').click();\ncy.get('#react-select-14-option-6').click();\nlet selectedTimeZone;\ncy.get('[class=\" css-1uccc91-singleValue\"]').invoke('text').then(text => {\n  selectedTimeZone = text.trim();\n  cy.log(selectedTimeZone);\n  expect(text).to.match(/-02/);\n}); //click the next button\ncy.get('[style=\"outline: none; border: none; background: rgb(98, 190, 178); color: rgb(255, 255, 255); width: 125px; height: 35px; margin-left: 20px;\"]').click(); //clicking easyewbcast web conference\ncy.get('[class=\"checkmarkR\"]').eq(1).click(); //select bitrate\ncy.get('[style=\"margin-bottom: 10px;\"] > .css-2b097c-container > .css-1j8vvet-control > .css-1hwfws3 > .css-r6er38-placeholder').click();\ncy.get('#react-select-15-option-0').click(); //uselect ecdn vendor\ncy.get('.form-group > .containerCheck > .checkmark').click(); //click next\ncy.get('.border-0').click(); //click create webcast\ncy.get('.cursor-pointer > button').click(); //wait time\ncy.wait(300); //verify the information\n//verifying the name\nlet selectedName;\ncy.get('[style=\"font-size: 25px; margin-left: -60px;\"]').invoke('text').then(text => {\n  selectedName = text.trim();\n  cy.log(selectedName);\n  expect(text).to.match(/webcast/);\n}); //verifying the time\ncy.get(':nth-child(2) > :nth-child(3) > :nth-child(1) > .d-flex > [style=\"width: 55%; text-align: left;\"]').invoke('text').then(text => {\n  selectedName = text.trim();\n  cy.log(selectedName);\n  expect(text).to.match(/10/);\n}); //verifying date\ncy.get(':nth-child(2) > :nth-child(2) > :nth-child(1) > .d-flex > [style=\"width: 55%; text-align: left;\"]').invoke('text').then(text => {\n  selectedName = text.trim();\n  cy.log(selectedName);\n  expect(text).to.match(/30/);\n}); //verifying stream\ncy.get(':nth-child(7) > .MuiButtonBase-root > .MuiListItemText-root').click();\ncy.get('.MuiList-root > :nth-child(1) > .MuiListItemText-root').click(); // cy.get('[class=\"col col-4\"]').find()\ncy.get('[class=\"form-control\"]').invoke('val').then(value => {\n  // value will contain the value of the input field\n  // You can use the value in your tests or assertions\n  expect(value).to.match(/wowza/);\n  cy.log(value);\n}); //test advance option\ncy.get(':nth-child(2) > .MuiListItemText-root').click();\ncy.get('.btn-group > .btn').click();\ncy.get('.btn-group > .dropdown-menu > :nth-child(1)').click();\nlet selectInformation;\ncy.get('[class=\"zoom-show-info-item-value-text col-9\"]').invoke('text').then(text => {\n  selectInformation = text.trim();\n  cy.log(selectInformation);\n  expect(text).to.match(/Meeting/);\n}); //check zoom webcast stream url\ncy.get('.MuiList-root > :nth-child(1) > .MuiListItemText-root').click();\ncy.get('[style=\"background-color: rgba(0, 0, 0, 0.05); border-radius: 10px; margin: 5px 0px; padding: 5px 2px;\"] > .col-4 > .form-control').invoke('val').then(value => {\n  expect(value).to.match(/wowza-easywebcast-edge.world-television.com/);\n});",
              "err": {},
              "uuid": "ae66124b-ad5a-4f82-a57f-c1f60fe18ed2",
              "parentUUID": "a5fc1609-950d-4862-9216-793e1cd3156c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dd348cb1-f9e8-4995-8bba-3ec69366342a",
            "2d294d6a-fd50-412f-8cb8-60ff8ca12ed0",
            "ddea3c6f-1f37-4ef7-acf2-d8e07610d123",
            "ae66124b-ad5a-4f82-a57f-c1f60fe18ed2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 534587,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": true,
        "json": true,
        "timestamp": "ddmmyyyy_HHMMss"
      },
      "version": "6.2.0"
    }
  }
}